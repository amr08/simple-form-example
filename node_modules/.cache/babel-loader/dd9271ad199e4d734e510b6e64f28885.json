{"ast":null,"code":"var _jsxFileName = \"/Users/andrea2/Desktop/WebDev/sideprojects/simple-form-example/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n/*import:\n  \"dumb component\"\n  \"functional stateless component (FSC)\"\n  \"presentational component\" \n  ^^^^^All different names for the same thing.  They don't manage state*/\n\nimport Form from \"../components/Form\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"Joe\"\n    };\n  }\n\n  handleChange(event) {\n    console.log(e.target.value); // this.setState({ name: event.target.value });\n  }\n\n  render() {\n    const userName = this.state.userName; //^ this is called destructuring. Cleaner code so you dont have to repeat this.props for everything.\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Form, {\n      userName: userName,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrea2/Desktop/WebDev/sideprojects/simple-form-example/src/containers/App.js"],"names":["React","Component","Form","App","constructor","props","state","userName","handleChange","event","console","log","e","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAGA;;;;;;AAKA,OAAOC,IAAP,MAAiB,oBAAjB;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACC,MAAF,CAASC,KAArB,EADkB,CAElB;AACD;;AAGDC,EAAAA,MAAM,GAAG;AAAA,UACCR,QADD,GACc,KAAKD,KADnB,CACCC,QADD,EAEP;;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAEA,QADZ;AAEE,MAAA,YAAY,EAAE,KAAKC,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADF;AAaD;;AA/ByB;;AAkC5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n/*import:\n  \"dumb component\"\n  \"functional stateless component (FSC)\"\n  \"presentational component\" \n  ^^^^^All different names for the same thing.  They don't manage state*/\nimport Form from \"../components/Form\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"Joe\",\n    };\n  }\n\n  handleChange(event) {\n    console.log(e.target.value)\n    // this.setState({ name: event.target.value });\n  };\n\n\n  render() {\n    const { userName } = this.state;\n    //^ this is called destructuring. Cleaner code so you dont have to repeat this.props for everything.\n\n    return (\n      <div className=\"container\">\n\n      {/*Presentational Component(PC)*/}\n      <Form \n        userName={userName} \n        handleChange={this.handleChange}\n      />\n           {/*^^^^Passing userName \"Joe\" down to PC*/}\n        {/*Passing function down to PC*/}\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}