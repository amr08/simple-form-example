{"ast":null,"code":"var _jsxFileName = \"/Users/andrea2/Desktop/WebDev/sideprojects/simple-form-example/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport './App.css';\n/*import:\n  \"dumb component\"\n  \"functional stateless component (FSC)\"\n  \"presentational component\" \n  ^^^^^All different names for the same thing.  They don't manage state*/\n\nimport Form from \"../components/Form\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      userName: \"Joe\"\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      userName: event.target.value\n    });\n    console.log(this.state.userName);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const userName = this.state.userName; //^ this is called destructuring. Cleaner code so you dont have to repeat this.props for everything.\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form, {\n      userName: userName,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrea2/Desktop/WebDev/sideprojects/simple-form-example/src/containers/App.js"],"names":["React","Component","Snackbar","Form","App","constructor","props","state","userName","handleChange","bind","handleSubmit","componentDidMount","setState","event","target","value","console","log","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAO,WAAP;AAGA;;;;;;AAKA,OAAOC,IAAP,MAAiB,oBAAjB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL,CAAc;AAACL,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACD;;AAEDC,EAAAA,YAAY,CAACK,KAAD,EAAQ;AAClB,SAAKD,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAEM,KAAK,CAACC,MAAN,CAAaC;AAAzB,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,QAAvB;AACD;;AAEDG,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAElBA,IAAAA,KAAK,CAACK,cAAN;AACD;;AAGDC,EAAAA,MAAM,GAAG;AAAA,UACCZ,QADD,GACc,KAAKD,KADnB,CACCC,QADD,EAEP;;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAEA,QADZ;AAEE,MAAA,YAAY,EAAE,KAAKC,YAFrB;AAGE,MAAA,YAAY,EAAE,KAAKE,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADF;AAaD;;AA3CyB;;AA8C5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport './App.css';\n\n\n/*import:\n  \"dumb component\"\n  \"functional stateless component (FSC)\"\n  \"presentational component\" \n  ^^^^^All different names for the same thing.  They don't manage state*/\nimport Form from \"../components/Form\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(){\n    this.setState({userName: \"Joe\"})\n  }\n\n  handleChange(event) {\n    this.setState({ userName: event.target.value });\n    console.log(this.state.userName)\n  };\n\n  handleSubmit(event) {\n    \n    event.preventDefault();\n  };\n\n\n  render() {\n    const { userName } = this.state;\n    //^ this is called destructuring. Cleaner code so you dont have to repeat this.props for everything.\n\n    return (\n      <div className=\"container\">\n\n      {/*Presentational Component(PC)*/}\n      <Form \n        userName={userName} \n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n      />\n        {/*^^^^Passing userName \"Joe\" and functions down to PC*/}\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}